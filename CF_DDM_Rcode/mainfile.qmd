---
title: "main_file"
author: "Liu"
format: html
editor: visual
---

# 毕业论文结果

数据分析系统环境：

```{r warning=FALSE}
library(plyr)
library(data.table)
library(tidyverse)
library(bruceR)

devtools::session_info(pkgs = "loaded")
```

```{r include=FALSE}
#| echo: false
# 加载原始数据和初步分析用表
source("script/functions.R")
source("script/getRaw.R")

source("script/Num2word.R")
source("script/AFF.R")
```

## 1 离群值检测

### 检测方法待完善！！！

```{r include=FALSE}
#| echo: false
# 离群值检测
filled_outers1 <- lapply(outers1, function(df) {
  n_missing_rows <- 10 - nrow(df)
  if (n_missing_rows > 0) {
    missing_rows <- data.frame(SubIndex = rep(0, n_missing_rows))
    df <- rbind(df, missing_rows)
  }
  return(df)
})

filled_outers1 <- bind_cols(filled_outers1)
colnames(filled_outers1) <- names(outers1)

filled_outers2 <- lapply(outers2, function(df) {
  n_missing_rows <- 10 - nrow(df)
  if (n_missing_rows > 0) {
    missing_rows <- data.frame(SubIndex = rep(0, n_missing_rows))
    df <- rbind(df, missing_rows)
  }
  return(df)
})

filled_outers2 <- bind_cols(filled_outers2)
colnames(filled_outers2) <- names(outers2)

outers <- cbind(filled_outers1, filled_outers2)
```

```{r warning=FALSE}
#| echo: false
sums <- colSums(outers)
non_zero_cols <- names(outers)[sums != 0]
outers[, non_zero_cols, drop = FALSE]
OUTERS <- c(29)
```

```{r}
# 加载预分析用数据
AFF_long_Sim <- filter(AFF_long, !(SubIndex %in% OUTERS))

SimpleTest.frame <- merge(CF_wide, AFF_wide, by = 'SubIndex') %>%
  filter(!(SubIndex %in% OUTERS)) %>% 
  select(-c(RT.Trans, RT.Repeat, ACC.Trans, ACC.Repeat))
SimpleTest.frame
```

## 2 认知灵活性与冲突积极性、不一致启动强度的相关

### 1.1 描述统计

图1：冲突积极性和不一致启动强度直方图

```{r}
hist(SimpleTest.frame$Conflict_pos)
```

```{r}
hist(SimpleTest.frame$Ic_prime_grade)
```

图3：认知灵活性直方图

```{r}
hist(SimpleTest.frame$switch_cost)
```

### 1.2 转换代价与冲突积极性的相关

冲突积极启动强度（$RT_{消极}-RT_{积极}$），反映情绪反转效应的强度，如果为负则未发生反转，如果为正，则发生了。

冲突的作用是激活消极情绪，从而干扰对积极情绪的反应。因此，当冲突被解决后，可以观察到对消极情绪的反应速度减缓

#### 1.2.1 比较一致和不一致条件下的积极词RT

```{r}
plot(SimpleTest.frame$switch_cost, SimpleTest.frame$Conflict_pos)
cor.test(SimpleTest.frame$switch_cost, SimpleTest.frame$Conflict_pos)
```

#### 1.2.2 比较不一致条件下的不同情绪效价RT差异

```{r}
plot(SimpleTest.frame$switch_cost, SimpleTest.frame$Ic_prime_grade)
cor.test(SimpleTest.frame$switch_cost, SimpleTest.frame$Ic_prime_grade)
```

## 3 假设1：转换代价越高，情绪词判断越慢

### 没有过滤离群值

```{r include=FALSE}
Hypo_1 <- AFF_long_Sim %>% 
  filter(respAffWord.corr == 1 & respFlanker.corr == 1) %>% 
  group_by(SubIndex) %>% 
  summarise(meanRT.G = mean(respAffWord.rt), .groups = 'drop') %>% 
  cbind(SimpleTest.frame$switch_cost) %>% 
  mutate(RT.G = meanRT.G - SimpleTest.frame$RT.prime_Co)

Hypo_1 <- AFF_long_Sim %>% 
  filter(respAffWord.corr == 1 & respFlanker.corr == 1) %>% 
  group_by(SubIndex, AffValue) %>% 
  summarise(meanRT = mean(respAffWord.rt), .groups = 'drop') %>% 
  pivot_wider(names_from = AffValue, values_from = meanRT) %>% 
  cbind(SimpleTest.frame$switch_cost) %>% 
  mutate(RT.pos = pos - SimpleTest.frame$RT.prime_Co, RT.neg = neg - SimpleTest.frame$RT.prime_Co) %>% 
  merge(Hypo_1, by = c('SubIndex', 'SimpleTest.frame$switch_cost'), all.x = TRUE)
```

### 3.1 转换代价与整体情绪词反应时的相关

```{r}
cor.test(Hypo_1$`SimpleTest.frame$switch_cost`, Hypo_1$RT.G)
```

### 3.2 转换代价与积极词反应时的相关

```{r}
cor.test(Hypo_1$`SimpleTest.frame$switch_cost`, Hypo_1$RT.pos)
```

### 3.3 转换代价与消极词反应时的相关

```{r}
cor.test(Hypo_1$`SimpleTest.frame$switch_cost`, Hypo_1$RT.neg)
```

## 4 情绪反转效应检验

```{r include=FALSE}
# 分析基础数据
RESULT <- AFF_long %>% 
  filter(respAffWord.corr == 1 & respFlanker.corr == 1) %>%
  MANOVA(subID = 'SubIndex' ,within = c('congruency', 'AffValue'), dv = 'respAffWord.rt') %>% 
  EMMEANS("AffValue", by = "congruency")
```

### 4.1 方差分析

#### 描述统计

```{r}
AFF_merge <- AFF_long %>%
  group_by(SubIndex, congruency, AffValue) %>% 
  dplyr::summarise(rt = mean(respAffWord.rt, na.rm = TRUE), .groups = "drop")

AFF_summary <- AFF_long %>% 
  group_by(SubIndex, congruency, AffValue) %>% 
  dplyr::summarise(rt = mean(respAffWord.rt, na.rm = TRUE), .groups = "drop") %>% 
  summarySE(measurevar= 'rt', groupvars=c("congruency","AffValue"), na.rm = TRUE) %>% 
  mutate(rt = round(rt,4)) %>% 
  mutate(sd = round(sd,4)) %>% 
  mutate(se = round(se,4)) %>% 
  mutate(ci = round(ci,4))
AFF_summary
```

#### 两因素方差分析

```{r message=TRUE, warning=FALSE}
RESULT$anova_table
```

### 4.2 简单效应分析结果

```{r message=TRUE, warning=FALSE}
SimpleEffect <- EMMEANS(RESULT, "AffValue", by = "congruency")
```

### 4.3 图

```{r}
ggplot(AFF_merge, aes(x = congruency, y = rt, fill = AffValue)) +
  geom_split_violin(trim = FALSE, color = "white") +
  geom_point(data = AFF_summary, aes(x = congruency, y = rt, fill = AffValue),
             pch=19, position=position_dodge(0.35), size=1.5)+ #绘制均值为点图
  geom_errorbar(data = AFF_summary,
                aes(ymin = rt-ci, ymax=rt+ci), #误差条表示95%的置信区间
                width=0.1, #误差条末端短横线的宽度
                position=position_dodge(0.35),
                color="black",
                alpha = 0.7,
                linewidth=0.5) +
  scale_fill_manual(values = c("#56B4E9", "#E69F00"))+ #设置填充的颜色
  theme_bw()+ #背景变为白色
  labs(x = "Congruency", y = "Reaction Time", title = "Plot of Reaction Time by Congruency and AffValue")
```

## 5 序列效应

### 5.1 block拆分并汇总

```{r}
#| echo: false
df.block <- data.frame()
for (i in c(0:3)) {
  df.block <- rbind(df.block, split_block(i))
}

# 计算差值
df.block %>%  
  group_by(SubIndex, block, AffValue) %>%  
  arrange(congruency) %>% 
  summarise(diff_btw_Con = diff(RT.target), .groups = 'drop') %>% # Pos_Ic-Co
  merge(df.block, by = c("SubIndex", "block", "AffValue"),all.x = TRUE) -> MID
df.block %>%   
  group_by(SubIndex, block, congruency) %>%
  arrange(AffValue) %>% 
  summarise(diff_btw_value = -diff(RT.target), .groups = 'drop') %>%
  merge(MID, by = c("SubIndex", "block", "congruency"),all.x = TRUE) -> df.block
df.block
```

### 5.2 冲突积极性 *Co_pos - Ic_pos*

```{r}
# 冲突解决启动的积极情绪会比一致启动强吗？(一致启动更慢)
df.block %>% 
  filter(AffValue == 'pos') %>% 
  group_by(SubIndex, block) %>% 
  dplyr::summarise(con_pos = mean(diff_btw_Con), .groups = 'drop') %>% 
  MANOVA(subID = "SubIndex", within = "block", dv = "con_pos")
```

### 5.3 情绪反转强度 *Ic_neg - Ic_pos*

```{r}
# 冲突解决产生的积极情绪效应强度会不会随时间变化？
df.block %>% 
  filter(congruency == 'Ic') %>% 
  group_by(SubIndex, block) %>% 
  dplyr::summarise(reverse_grade = mean(diff_btw_value), .groups = 'drop') %>% 
  MANOVA(subID = "SubIndex", within = "block", dv = "reverse_grade")
```

### 5.4 不同的情绪如何随block变化

```{r}
df.block %>%
  group_by(SubIndex, block, AffValue) %>% 
  dplyr::summarise(RT = mean(RT.target), .groups = 'drop') %>% 
  MANOVA(subID = "SubIndex", within = c('AffValue',"block"), dv = "RT", sph.correction="GG")
```

冲突解决的积极情绪的相对强度随着时间增加逐渐减弱：

要么是消极词变快了，要么是积极词变慢了

如果是消极词变快了，

可能性1，适应了冲突，从而导致冲突解决产生的积极情绪效价减弱

可能性2：疲劳带来的情绪变化

## 6 HDDM

```{r include=FALSE}
df.hddm <- AFF_long
```

### 思路1：直接导出2×2的表格进行两水平的分析

```{r}
df.m1 <- df.hddm %>% 
  filter(respFlanker.corr == 1) %>%
  filter(!(SubIndex %in% OUTERS)) %>% 
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, congruency, AffValue, response, rt) %>% 
  filter(!is.na(rt))

write.csv(df.m1, file = 'hddm/df.m1.csv', row.names = FALSE)
```

假设：

转换代价影响t0

效价和启动类型影响v、z

### 思路2：导出4个Condition,，分别建模

```{r}
df.m2_Co_pos <- df.hddm %>% 
  filter(respFlanker.corr == 1, congruency == "Co", AffValue == "pos") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m2_Co_pos, file = 'hddm/df.m2_Co_pos.csv', row.names = FALSE)

df.m2_Co_neg <- df.hddm %>% 
  filter(respFlanker.corr == 1, congruency == "Co", AffValue == "neg") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m2_Co_neg, file = 'hddm/df.m2_Co_neg.csv', row.names = FALSE)

df.m2_Ic_pos <- df.hddm %>% 
  filter(respFlanker.corr == 1, congruency == "Ic", AffValue == "pos") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m2_Ic_pos, file = 'hddm/df.m2_Ic_pos.csv', row.names = FALSE)

df.m2_Ic_neg <- df.hddm %>% 
  filter(respFlanker.corr == 1, congruency == "Ic", AffValue == "neg") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m2_Ic_neg, file = 'hddm/df.m2_Ic_neg.csv', row.names = FALSE)
```

### 思路3：按照单独导出作差的两种情况

3.1 导出积极情绪组，比较co和ic

```{r}
df.m3_IcCo <- df.hddm %>% 
  filter(respFlanker.corr == 1, AffValue == "pos") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, congruency, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m3_IcCo, file = 'hddm/df.m3_IcCo.csv', row.names = FALSE)
```

3.2 导出冲突条件，比较pos和neg

```{r}
df.m3_PosNeg <- df.hddm %>% 
  filter(respFlanker.corr == 1, congruency == "Ic") %>%
  mutate(response = respAffWord.corr) %>% 
  mutate(subj_idx = SubIndex) %>% 
  mutate(rt = respAffWord.rt/1000) %>% 
  select(subj_idx, AffValue, response, rt) %>% 
  filter(!is.na(rt))
write.csv(df.m3_PosNeg, file = 'hddm/df.m3_PosNeg.csv', row.names = FALSE)
```

## 待完成事项

1.  对各个数据绘制直方图，进行正态性检验
2.  计算冲突效应大小（做相关）
3.  检验跨block效应并绘图(需要优化加工，加上散点、误差棒)+目前计算的时积极启动效应(block拆分部分的数值计算有误)
4.  宽表是经过过滤的，而长表没有
5.  没有做传统的ACC数据分析

## 奇怪的问题

1.  积极启动效应（Ic_neg - Ic_pos）：反映积极启动的强度
2.  冲突积极性（Conflict positivity Ic_pos - C_pos）：以一致条件为基线，比较不一致启动的效价
3.  4和5分别代表了什么？
